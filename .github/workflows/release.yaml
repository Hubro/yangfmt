name: Create release

on: push

# on:
#   push:
#     tags:
#       - "v*"

jobs:
  build-linux:
    name: Build Linux binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
          - i686-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v3

      - name: Install gcc-aarch64-linux-gnu
        if: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}
        run: sudo apt-get update && sudo apt-get install gcc-aarch64-linux-gnu

      - name: Install 32-bit gcc
        if: ${{ matrix.target == 'i686-unknown-linux-gnu' }}
        run: sudo apt-get update && sudo apt-get install gcc-multilib

      - name: Add target with rustup
        run: rustup target add ${{ matrix.target }}

      - name: Build release
        run: cargo build --release --target=${{ matrix.target }}

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: target/${{ matrix.target }}/release/yangfmt

  build-macos:
    name: Build MacOS binary
    runs-on: macos-latest
    strategy:
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v3

      - name: Add target with rustup
        run: rustup target add ${{ matrix.target }}

      - name: Build release
        run: cargo build --release --target=${{ matrix.target }}

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: target/${{ matrix.target }}/release/yangfmt

  build-windows:
    name: Build Windows binary
    runs-on: windows-latest
    strategy:
      matrix:
        target:
          - x86_64-pc-windows-msvc
          - i686-pc-windows-msvc
    steps:
      - uses: actions/checkout@v3

      - name: Add target with rustup
        run: rustup target add ${{ matrix.target }}

      - name: Build release
        run: cargo build --release --target=${{ matrix.target }}

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: target/${{ matrix.target }}/release/yangfmt.exe
